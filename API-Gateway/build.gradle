buildscript {
	ext {
		kotlinVersion = '1.2.10'
		springBootVersion = '1.5.9.RELEASE'
		gradleDockerPlugin = '0.13.0'
        springBootAdmin = '1.5.6'
	}
	repositories {
		maven {
            url "https://plugins.gradle.org/m2/"
        }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${gradleDockerPlugin}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'

group = 'org.rizki.mufrizal.api.gateway'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

jar {
    baseName = 'api-gateway'
    version = '0.0.1'
}

docker {
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
}

ext {
    springCloudVersion = 'Edgware.RELEASE'
}

dependencies {
    compile("de.codecentric:spring-boot-admin-starter-client:${springBootAdmin}")
    compile('org.springframework.cloud:spring-cloud-starter-sleuth')
    compile('org.springframework.cloud:spring-cloud-sleuth-zipkin')
    compile('org.springframework.cloud:spring-cloud-starter-hystrix')
    compile('org.springframework.cloud:spring-cloud-starter-zuul')
	compile('org.springframework.cloud:spring-cloud-starter-consul-config')
    compile('org.springframework.cloud:spring-cloud-starter-consul-all')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security:spring-security-jwt')
    compile('org.springframework.security.oauth:spring-security-oauth2')
    compile('org.springframework.session:spring-session')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}